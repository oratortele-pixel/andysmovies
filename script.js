let allMovies = [];
let currentDecade = 'all';

/* üì• –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–ª—å–º–æ–≤ –∏–∑ JSON */
function loadMovies() {
  fetch('movies.json')
    .then(response => response.json())
    .then(movies => {
      allMovies = movies;
      renderMovies(movies);
      setupDecadeFilters();
      setupSearch();
    })
    .catch(error => console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error));
}

/* üé® –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ñ–∏–ª—å–º–æ–≤ —Å —É—á—ë—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–∞ –¥–µ—Å—è—Ç–∏–ª–µ—Ç–∏–π –∏ –ø–æ–∏—Å–∫–∞ */
function renderMovies(movies) {
  const catalog = document.getElementById('catalog');
  catalog.innerHTML = '';

  // 1) –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–µ—Å—è—Ç–∏–ª–µ—Ç–∏—é
  let filteredMovies = movies;
  if (currentDecade !== 'all') {
    const decadeStart = parseInt(currentDecade, 10);
    filteredMovies = movies.filter(
      (movie) => movie.year >= decadeStart && movie.year < decadeStart + 10
    );
  }

  // 2) –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é (prefix match; –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∞—Ä—Ç–∏–∫–ª–∏)
  const searchTerm =
    document.getElementById('search-input')?.value.toLowerCase().trim() || '';
  if (searchTerm) {
    filteredMovies = filteredMovies.filter((movie) => {
      const cleanTitle = movie.title.replace(/^(the|a|an)\s+/i, '');
      return (
        cleanTitle.toLowerCase().startsWith(searchTerm) ||
        movie.title.toLowerCase().startsWith(searchTerm)
      );
    });
  }

  // 3) –†–µ–Ω–¥–µ—Ä –∫–∞—Ä—Ç–æ—á–µ–∫ (—Å–æ–∑–¥–∞—ë–º DOM-—ç–ª–µ–º–µ–Ω—Ç—ã –≤—Ä—É—á–Ω—É—é, —á—Ç–æ–±—ã –ø–æ–≤–µ—Å–∏—Ç—å onload –¥–ª—è fade-in)
  filteredMovies.forEach((movie) => {
    // –û–±—ë—Ä—Ç–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
    const card = document.createElement('div');
    card.className = 'card';

    // ‚ûï –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º —Ü–≤–µ—Ç –ø–æ–¥—Å–≤–µ—Ç–∫–∏ –∏–∑ JSON –≤ CSS-–ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ
    const hl = movie.color || '#ffcc00';
    card.style.setProperty('--hl', hl);

    // –ü–æ—Å—Ç–µ—Ä —Å fade-in: —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π, –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–±–∞–≤–∏–º –∫–ª–∞—Å—Å .loaded
    const img = document.createElement('img');
    img.src = movie.poster;
    img.alt = movie.title;
    img.loading = 'lazy';
    img.onload = () => img.classList.add('loaded'); // –∫–ª–∞—Å—Å .loaded –≤–∫–ª—é—á–∞–µ—Ç opacity:1 –∏–∑ CSS

    // –ò–Ω—Ñ–æ-–±–ª–æ–∫ (–Ω–∞–∑–≤–∞–Ω–∏–µ + –≥–æ–¥). –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å <span class="highlight">...
    const info = document.createElement('div');
    info.className = 'info';
    const highlightTitle = getHighlightedTitle(movie.title, searchTerm);
    info.innerHTML = `<h3>${highlightTitle}</h3><p>${movie.year}</p>`;

    // –ö–ª–∏–∫ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ ‚Äî –æ—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É —Å –¥–µ—Ç–∞–ª—è–º–∏
    card.addEventListener('click', () => showModal(movie));

    // –°–æ–±–∏—Ä–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
    card.appendChild(img);
    card.appendChild(info);
    catalog.appendChild(card);
  });

  // 4) –ü—É—Å—Ç–∞—è –≤—ã–¥–∞—á–∞
  if (filteredMovies.length === 0) {
    catalog.innerHTML = '<p class="no-results">Nothing found</p>';
  }
}

/* ‚ú® –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ (prefix) */
function getHighlightedTitle(title, searchTerm) {
  if (!searchTerm) return title;

  const cleanTitle = title.replace(/^(the|a|an)\s+/i, '');
  if (cleanTitle.toLowerCase().startsWith(searchTerm)) {
    const prefixLen = title.length - cleanTitle.length;
    return `<span class="highlight">${title.substring(
      0,
      prefixLen + searchTerm.length
    )}</span>${title.substring(prefixLen + searchTerm.length)}`;
  }
  if (title.toLowerCase().startsWith(searchTerm)) {
    return `<span class="highlight">${title.substring(
      0,
      searchTerm.length
    )}</span>${title.substring(searchTerm.length)}`;
  }
  return title;
}

/* ‚è≥ –ö–Ω–æ–ø–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞ –¥–µ—Å—è—Ç–∏–ª–µ—Ç–∏–π */
function setupDecadeFilters() {
  document.querySelectorAll('.decade-filters button').forEach((btn) => {
    btn.addEventListener('click', () => {
      currentDecade = btn.dataset.decade;
      document
        .querySelectorAll('.decade-filters button')
        .forEach((b) => b.classList.remove('active'));
      btn.classList.add('active');
      renderMovies(allMovies);
    });
  });
}

/* üîç –ñ–∏–≤–æ–π –ø–æ–∏—Å–∫ */
function setupSearch() {
  const input = document.getElementById('search-input');
  if (!input) return;
  input.addEventListener('input', () => {
    renderMovies(allMovies);
  });
}

/* üìñ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –¥–µ—Ç–∞–ª—è–º–∏ —Ñ–∏–ª—å–º–∞ */
function showModal(movie) {
  const modal = document.getElementById('modal');
  document.getElementById('modal-title').textContent = movie.title;
  document.getElementById('modal-year').textContent = movie.year;
  document.getElementById('modal-notes').textContent = movie.notes || '';

  // –¶–∏—Ç–∞—Ç—ã
  const quotesList = document.getElementById('modal-quotes');
  quotesList.innerHTML = '';
  (movie.quotes || []).forEach((q) => {
    const li = document.createElement('li');
    li.textContent = q;
    quotesList.appendChild(li);
  });

  // –°—Å—ã–ª–∫–∏
  const linksList = document.getElementById('modal-links');
  linksList.innerHTML = '';
  (movie.links || []).forEach((l) => {
    const li = document.createElement('li');
    const a = document.createElement('a');
    a.href = l;
    a.textContent = l;
    a.target = '_blank';
    li.appendChild(a);
    linksList.appendChild(li);
  });

  modal.style.display = 'flex';
}

/* ‚ùå –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏ */
document.getElementById('close').addEventListener('click', () => {
  document.getElementById('modal').style.display = 'none';
});

/* üöÄ –°—Ç–∞—Ä—Ç */
loadMovies();
